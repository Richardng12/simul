// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LobbyPage /> renders add lobby modal 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(AddLobbyModal)
    open={true}
  >
    <AddLobbyModal
      createLobby={[Function]}
      lobbies={Array []}
      open={true}
    >
      <div>
        <ForwardRef(Modal)
          onClose={[Function]}
          open={true}
        >
          <ForwardRef(Portal)
            disablePortal={false}
          >
            <Portal
              containerInfo={
                <body
                  style="padding-right: 0px; overflow: hidden;"
                >
                  <div
                    role="presentation"
                    style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                  >
                    <div
                      aria-hidden="true"
                      style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: rgba(0, 0, 0, 0.5);"
                    />
                    <div
                      data-test="sentinelStart"
                      tabindex="0"
                    />
                    <div
                      class="modal"
                      tabindex="-1"
                    >
                      <div
                        class="titleContainer"
                      >
                        <p
                          class="titleName"
                        >
                          LOBBY CREATION
                        </p>
                      </div>
                      <div
                        class="fieldContainer"
                      >
                        <div
                          class="lobbyNameContainer"
                        >
                          <div
                            class="MuiFormControl-root MuiTextField-root makeStyles-root-126 lobbyNameField"
                            height="20"
                          >
                            <label
                              class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                              data-shrink="false"
                            >
                              Lobby Name
                            </label>
                            <div
                              class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                            >
                              <input
                                aria-invalid="false"
                                class="MuiInputBase-input MuiOutlinedInput-input ModalTextField-input2-125"
                                type="text"
                                value=""
                              />
                              <fieldset
                                aria-hidden="true"
                                class="PrivateNotchedOutline-root-102 MuiOutlinedInput-notchedOutline"
                              >
                                <legend
                                  class="PrivateNotchedOutline-legendLabelled-104"
                                >
                                  <span>
                                    Lobby Name
                                  </span>
                                </legend>
                              </fieldset>
                            </div>
                          </div>
                        </div>
                        <div
                          class="lobbyPasswordContainer"
                        />
                        <div
                          class="checkContainer"
                        >
                          <label
                            class="MuiFormControlLabel-root"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-139 MuiCheckbox-root MuiCheckbox-colorSecondary checkBox MuiIconButton-colorSecondary"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-142"
                                  data-indeterminate="false"
                                  type="checkbox"
                                  value=""
                                />
                                <svg
                                  aria-hidden="true"
                                  class="MuiSvgIcon-root"
                                  focusable="false"
                                  role="presentation"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                  />
                                </svg>
                              </span>
                              <span
                                class="MuiTouchRipple-root"
                              />
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                            >
                              Make Lobby Private
                            </span>
                          </label>
                        </div>
                      </div>
                      <div
                        class="lobbyValidation"
                      >
                        <p
                          class="MuiTypography-root MuiTypography-body1"
                        />
                      </div>
                      <div
                        class="buttonContainer"
                      >
                        <button
                          class="MuiButtonBase-root MuiButton-root MuiButton-text cancelButton"
                          tabindex="0"
                          type="button"
                        >
                          <span
                            class="MuiButton-label"
                          >
                            Cancel
                          </span>
                          <span
                            class="MuiTouchRipple-root"
                          />
                        </button>
                        <button
                          class="MuiButtonBase-root MuiButton-root MuiButton-text createButton"
                          tabindex="0"
                          type="button"
                        >
                          <span
                            class="MuiButton-label"
                          >
                            CREATE LOBBY
                          </span>
                          <span
                            class="MuiTouchRipple-root"
                          />
                        </button>
                      </div>
                    </div>
                    <div
                      data-test="sentinelEnd"
                      tabindex="0"
                    />
                  </div>
                </body>
              }
            >
              <div
                onKeyDown={[Function]}
                role="presentation"
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                    "zIndex": 1300,
                  }
                }
              >
                <ForwardRef(SimpleBackdrop)
                  onClick={[Function]}
                  open={true}
                >
                  <div
                    aria-hidden={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitTapHighlightColor": "transparent",
                        "backgroundColor": "rgba(0, 0, 0, 0.5)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                        "zIndex": -1,
                      }
                    }
                  />
                </ForwardRef(SimpleBackdrop)>
                <TrapFocus
                  disableAutoFocus={false}
                  disableEnforceFocus={false}
                  disableRestoreFocus={false}
                  getDoc={[Function]}
                  isEnabled={[Function]}
                  open={true}
                >
                  <div
                    data-test="sentinelStart"
                    tabIndex={0}
                  />
                  <div
                    className="modal"
                    tabIndex="-1"
                  >
                    <div
                      className="titleContainer"
                    >
                      <p
                        className="titleName"
                      >
                        LOBBY CREATION
                      </p>
                    </div>
                    <div
                      className="fieldContainer"
                    >
                      <div
                        className="lobbyNameContainer"
                      >
                        <WithStyles(ModalTextField)
                          className="lobbyNameField"
                          label="Lobby Name"
                          onChange={[Function]}
                        >
                          <ModalTextField
                            className="lobbyNameField"
                            classes={
                              Object {
                                "input2": "ModalTextField-input2-125",
                              }
                            }
                            label="Lobby Name"
                            onChange={[Function]}
                          >
                            <WithStyles(ForwardRef(TextField))
                              InputProps={
                                Object {
                                  "classes": Object {
                                    "input": "ModalTextField-input2-125",
                                  },
                                }
                              }
                              className="makeStyles-root-126 lobbyNameField"
                              height={20}
                              label="Lobby Name"
                              onChange={[Function]}
                              variant="outlined"
                            >
                              <ForwardRef(TextField)
                                InputProps={
                                  Object {
                                    "classes": Object {
                                      "input": "ModalTextField-input2-125",
                                    },
                                  }
                                }
                                className="makeStyles-root-126 lobbyNameField"
                                classes={
                                  Object {
                                    "root": "MuiTextField-root",
                                  }
                                }
                                height={20}
                                label="Lobby Name"
                                onChange={[Function]}
                                variant="outlined"
                              >
                                <WithStyles(ForwardRef(FormControl))
                                  className="MuiTextField-root makeStyles-root-126 lobbyNameField"
                                  color="primary"
                                  disabled={false}
                                  error={false}
                                  fullWidth={false}
                                  height={20}
                                  required={false}
                                  variant="outlined"
                                >
                                  <ForwardRef(FormControl)
                                    className="MuiTextField-root makeStyles-root-126 lobbyNameField"
                                    classes={
                                      Object {
                                        "fullWidth": "MuiFormControl-fullWidth",
                                        "marginDense": "MuiFormControl-marginDense",
                                        "marginNormal": "MuiFormControl-marginNormal",
                                        "root": "MuiFormControl-root",
                                      }
                                    }
                                    color="primary"
                                    disabled={false}
                                    error={false}
                                    fullWidth={false}
                                    height={20}
                                    required={false}
                                    variant="outlined"
                                  >
                                    <div
                                      className="MuiFormControl-root MuiTextField-root makeStyles-root-126 lobbyNameField"
                                      height={20}
                                    >
                                      <WithStyles(ForwardRef(InputLabel))>
                                        <ForwardRef(InputLabel)
                                          classes={
                                            Object {
                                              "animated": "MuiInputLabel-animated",
                                              "asterisk": "MuiInputLabel-asterisk",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "filled": "MuiInputLabel-filled",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInputLabel-formControl",
                                              "marginDense": "MuiInputLabel-marginDense",
                                              "outlined": "MuiInputLabel-outlined",
                                              "required": "Mui-required",
                                              "root": "MuiInputLabel-root",
                                              "shrink": "MuiInputLabel-shrink",
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(FormLabel))
                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                            classes={
                                              Object {
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "required": "Mui-required",
                                              }
                                            }
                                            data-shrink={false}
                                          >
                                            <ForwardRef(FormLabel)
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                                  "disabled": "Mui-disabled Mui-disabled",
                                                  "error": "Mui-error Mui-error",
                                                  "filled": "MuiFormLabel-filled",
                                                  "focused": "Mui-focused Mui-focused",
                                                  "required": "Mui-required Mui-required",
                                                  "root": "MuiFormLabel-root",
                                                }
                                              }
                                              data-shrink={false}
                                            >
                                              <label
                                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                data-shrink={false}
                                              >
                                                Lobby Name
                                              </label>
                                            </ForwardRef(FormLabel)>
                                          </WithStyles(ForwardRef(FormLabel))>
                                        </ForwardRef(InputLabel)>
                                      </WithStyles(ForwardRef(InputLabel))>
                                      <WithStyles(ForwardRef(OutlinedInput))
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "input": "ModalTextField-input2-125",
                                          }
                                        }
                                        fullWidth={false}
                                        label={
                                          <React.Fragment>
                                            Lobby Name
                                          </React.Fragment>
                                        }
                                        multiline={false}
                                        onChange={[Function]}
                                      >
                                        <ForwardRef(OutlinedInput)
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                              "adornedStart": "MuiOutlinedInput-adornedStart",
                                              "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "input": "MuiOutlinedInput-input ModalTextField-input2-125",
                                              "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                              "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                              "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                              "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                              "marginDense": "MuiOutlinedInput-marginDense",
                                              "multiline": "MuiOutlinedInput-multiline",
                                              "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                              "root": "MuiOutlinedInput-root",
                                            }
                                          }
                                          fullWidth={false}
                                          label={
                                            <React.Fragment>
                                              Lobby Name
                                            </React.Fragment>
                                          }
                                          multiline={false}
                                          onChange={[Function]}
                                        >
                                          <WithStyles(ForwardRef(InputBase))
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "input": "MuiOutlinedInput-input ModalTextField-input2-125",
                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                "multiline": "MuiOutlinedInput-multiline",
                                                "notchedOutline": null,
                                                "root": "MuiOutlinedInput-root",
                                              }
                                            }
                                            fullWidth={false}
                                            inputComponent="input"
                                            multiline={false}
                                            onChange={[Function]}
                                            renderSuffix={[Function]}
                                            type="text"
                                          >
                                            <ForwardRef(InputBase)
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                  "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                  "disabled": "Mui-disabled Mui-disabled",
                                                  "error": "Mui-error Mui-error",
                                                  "focused": "Mui-focused Mui-focused",
                                                  "formControl": "MuiInputBase-formControl",
                                                  "fullWidth": "MuiInputBase-fullWidth",
                                                  "input": "MuiInputBase-input MuiOutlinedInput-input ModalTextField-input2-125",
                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                  "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                  "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                  "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                }
                                              }
                                              fullWidth={false}
                                              inputComponent="input"
                                              multiline={false}
                                              onChange={[Function]}
                                              renderSuffix={[Function]}
                                              type="text"
                                            >
                                              <div
                                                className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                                                onClick={[Function]}
                                              >
                                                <input
                                                  aria-invalid={false}
                                                  autoFocus={false}
                                                  className="MuiInputBase-input MuiOutlinedInput-input ModalTextField-input2-125"
                                                  disabled={false}
                                                  onAnimationStart={[Function]}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  required={false}
                                                  type="text"
                                                />
                                                <WithStyles(ForwardRef(NotchedOutline))
                                                  className="MuiOutlinedInput-notchedOutline"
                                                  label={
                                                    <React.Fragment>
                                                      Lobby Name
                                                    </React.Fragment>
                                                  }
                                                  labelWidth={0}
                                                  notched={false}
                                                >
                                                  <ForwardRef(NotchedOutline)
                                                    className="MuiOutlinedInput-notchedOutline"
                                                    classes={
                                                      Object {
                                                        "legend": "PrivateNotchedOutline-legend-103",
                                                        "legendLabelled": "PrivateNotchedOutline-legendLabelled-104",
                                                        "legendNotched": "PrivateNotchedOutline-legendNotched-105",
                                                        "root": "PrivateNotchedOutline-root-102",
                                                      }
                                                    }
                                                    label={
                                                      <React.Fragment>
                                                        Lobby Name
                                                      </React.Fragment>
                                                    }
                                                    labelWidth={0}
                                                    notched={false}
                                                  >
                                                    <fieldset
                                                      aria-hidden={true}
                                                      className="PrivateNotchedOutline-root-102 MuiOutlinedInput-notchedOutline"
                                                    >
                                                      <legend
                                                        className="PrivateNotchedOutline-legendLabelled-104"
                                                      >
                                                        <span>
                                                          Lobby Name
                                                        </span>
                                                      </legend>
                                                    </fieldset>
                                                  </ForwardRef(NotchedOutline)>
                                                </WithStyles(ForwardRef(NotchedOutline))>
                                              </div>
                                            </ForwardRef(InputBase)>
                                          </WithStyles(ForwardRef(InputBase))>
                                        </ForwardRef(OutlinedInput)>
                                      </WithStyles(ForwardRef(OutlinedInput))>
                                    </div>
                                  </ForwardRef(FormControl)>
                                </WithStyles(ForwardRef(FormControl))>
                              </ForwardRef(TextField)>
                            </WithStyles(ForwardRef(TextField))>
                          </ModalTextField>
                        </WithStyles(ModalTextField)>
                      </div>
                      <div
                        className="lobbyPasswordContainer"
                      />
                      <div
                        className="checkContainer"
                      >
                        <WithStyles(ForwardRef(FormControlLabel))
                          control={
                            <ForwardRef(WithStyles)
                              checked={false}
                              className="checkBox"
                              onChange={[Function]}
                            />
                          }
                          label="Make Lobby Private"
                        >
                          <ForwardRef(FormControlLabel)
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "label": "MuiFormControlLabel-label",
                                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                "root": "MuiFormControlLabel-root",
                              }
                            }
                            control={
                              <ForwardRef(WithStyles)
                                checked={false}
                                className="checkBox"
                                onChange={[Function]}
                              />
                            }
                            label="Make Lobby Private"
                          >
                            <label
                              className="MuiFormControlLabel-root"
                            >
                              <WithStyles(ForwardRef(Checkbox))
                                checked={false}
                                className="checkBox"
                                onChange={[Function]}
                              >
                                <ForwardRef(Checkbox)
                                  checked={false}
                                  className="checkBox"
                                  classes={
                                    Object {
                                      "checked": "Mui-checked",
                                      "colorPrimary": "MuiCheckbox-colorPrimary",
                                      "colorSecondary": "MuiCheckbox-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "indeterminate": "MuiCheckbox-indeterminate",
                                      "root": "MuiCheckbox-root",
                                    }
                                  }
                                  onChange={[Function]}
                                >
                                  <WithStyles(ForwardRef(SwitchBase))
                                    checked={false}
                                    checkedIcon={
                                      <UNDEFINED
                                        fontSize="default"
                                      />
                                    }
                                    className="checkBox"
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "disabled": "Mui-disabled",
                                        "root": "MuiCheckbox-root MuiCheckbox-colorSecondary",
                                      }
                                    }
                                    color="secondary"
                                    icon={
                                      <UNDEFINED
                                        fontSize="default"
                                      />
                                    }
                                    inputProps={
                                      Object {
                                        "data-indeterminate": false,
                                      }
                                    }
                                    onChange={[Function]}
                                    type="checkbox"
                                  >
                                    <ForwardRef(SwitchBase)
                                      checked={false}
                                      checkedIcon={
                                        <UNDEFINED
                                          fontSize="default"
                                        />
                                      }
                                      className="checkBox"
                                      classes={
                                        Object {
                                          "checked": "PrivateSwitchBase-checked-140 Mui-checked",
                                          "disabled": "PrivateSwitchBase-disabled-141 Mui-disabled",
                                          "input": "PrivateSwitchBase-input-142",
                                          "root": "PrivateSwitchBase-root-139 MuiCheckbox-root MuiCheckbox-colorSecondary",
                                        }
                                      }
                                      color="secondary"
                                      icon={
                                        <UNDEFINED
                                          fontSize="default"
                                        />
                                      }
                                      inputProps={
                                        Object {
                                          "data-indeterminate": false,
                                        }
                                      }
                                      onChange={[Function]}
                                      type="checkbox"
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        className="PrivateSwitchBase-root-139 MuiCheckbox-root MuiCheckbox-colorSecondary checkBox"
                                        color="secondary"
                                        component="span"
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(IconButton)
                                          className="PrivateSwitchBase-root-139 MuiCheckbox-root MuiCheckbox-colorSecondary checkBox"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          color="secondary"
                                          component="span"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-139 MuiCheckbox-root MuiCheckbox-colorSecondary checkBox MuiIconButton-colorSecondary"
                                            component="span"
                                            disabled={false}
                                            focusRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-139 MuiCheckbox-root MuiCheckbox-colorSecondary checkBox MuiIconButton-colorSecondary"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                aria-disabled={false}
                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-139 MuiCheckbox-root MuiCheckbox-colorSecondary checkBox MuiIconButton-colorSecondary"
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <input
                                                    checked={false}
                                                    className="PrivateSwitchBase-input-142"
                                                    data-indeterminate={false}
                                                    onChange={[Function]}
                                                    type="checkbox"
                                                  />
                                                  <ForwardRef
                                                    fontSize="default"
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      fontSize="default"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                        fontSize="default"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root"
                                                          focusable="false"
                                                          role="presentation"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef>
                                                </span>
                                                <NoSsr>
                                                  <WithStyles(memo)
                                                    center={true}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={true}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </NoSsr>
                                              </span>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </ForwardRef(SwitchBase)>
                                  </WithStyles(ForwardRef(SwitchBase))>
                                </ForwardRef(Checkbox)>
                              </WithStyles(ForwardRef(Checkbox))>
                              <WithStyles(ForwardRef(Typography))
                                className="MuiFormControlLabel-label"
                                component="span"
                              >
                                <ForwardRef(Typography)
                                  className="MuiFormControlLabel-label"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  component="span"
                                >
                                  <span
                                    className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                  >
                                    Make Lobby Private
                                  </span>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </label>
                          </ForwardRef(FormControlLabel)>
                        </WithStyles(ForwardRef(FormControlLabel))>
                      </div>
                    </div>
                    <div
                      className="lobbyValidation"
                    >
                      <WithStyles(ForwardRef(Typography))>
                        <ForwardRef(Typography)
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                        >
                          <p
                            className="MuiTypography-root MuiTypography-body1"
                          />
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                    </div>
                    <div
                      className="buttonContainer"
                    >
                      <WithStyles(ForwardRef(Button))
                        className="cancelButton"
                        onClick={[Function]}
                      >
                        <ForwardRef(Button)
                          className="cancelButton"
                          classes={
                            Object {
                              "colorInherit": "MuiButton-colorInherit",
                              "contained": "MuiButton-contained",
                              "containedPrimary": "MuiButton-containedPrimary",
                              "containedSecondary": "MuiButton-containedSecondary",
                              "containedSizeLarge": "MuiButton-containedSizeLarge",
                              "containedSizeSmall": "MuiButton-containedSizeSmall",
                              "disableElevation": "MuiButton-disableElevation",
                              "disabled": "Mui-disabled",
                              "endIcon": "MuiButton-endIcon",
                              "focusVisible": "Mui-focusVisible",
                              "fullWidth": "MuiButton-fullWidth",
                              "iconSizeLarge": "MuiButton-iconSizeLarge",
                              "iconSizeMedium": "MuiButton-iconSizeMedium",
                              "iconSizeSmall": "MuiButton-iconSizeSmall",
                              "label": "MuiButton-label",
                              "outlined": "MuiButton-outlined",
                              "outlinedPrimary": "MuiButton-outlinedPrimary",
                              "outlinedSecondary": "MuiButton-outlinedSecondary",
                              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                              "root": "MuiButton-root",
                              "sizeLarge": "MuiButton-sizeLarge",
                              "sizeSmall": "MuiButton-sizeSmall",
                              "startIcon": "MuiButton-startIcon",
                              "text": "MuiButton-text",
                              "textPrimary": "MuiButton-textPrimary",
                              "textSecondary": "MuiButton-textSecondary",
                              "textSizeLarge": "MuiButton-textSizeLarge",
                              "textSizeSmall": "MuiButton-textSizeSmall",
                            }
                          }
                          onClick={[Function]}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            className="MuiButton-root MuiButton-text cancelButton"
                            component="button"
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                            onClick={[Function]}
                            type="button"
                          >
                            <ForwardRef(ButtonBase)
                              className="MuiButton-root MuiButton-text cancelButton"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="Mui-focusVisible"
                              onClick={[Function]}
                              type="button"
                            >
                              <button
                                className="MuiButtonBase-root MuiButton-root MuiButton-text cancelButton"
                                disabled={false}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={0}
                                type="button"
                              >
                                <span
                                  className="MuiButton-label"
                                >
                                  Cancel
                                </span>
                                <NoSsr>
                                  <WithStyles(memo)
                                    center={false}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={false}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(memo)>
                                </NoSsr>
                              </button>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(Button)>
                      </WithStyles(ForwardRef(Button))>
                      <WithStyles(ForwardRef(Button))
                        className="createButton"
                        onClick={[Function]}
                      >
                        <ForwardRef(Button)
                          className="createButton"
                          classes={
                            Object {
                              "colorInherit": "MuiButton-colorInherit",
                              "contained": "MuiButton-contained",
                              "containedPrimary": "MuiButton-containedPrimary",
                              "containedSecondary": "MuiButton-containedSecondary",
                              "containedSizeLarge": "MuiButton-containedSizeLarge",
                              "containedSizeSmall": "MuiButton-containedSizeSmall",
                              "disableElevation": "MuiButton-disableElevation",
                              "disabled": "Mui-disabled",
                              "endIcon": "MuiButton-endIcon",
                              "focusVisible": "Mui-focusVisible",
                              "fullWidth": "MuiButton-fullWidth",
                              "iconSizeLarge": "MuiButton-iconSizeLarge",
                              "iconSizeMedium": "MuiButton-iconSizeMedium",
                              "iconSizeSmall": "MuiButton-iconSizeSmall",
                              "label": "MuiButton-label",
                              "outlined": "MuiButton-outlined",
                              "outlinedPrimary": "MuiButton-outlinedPrimary",
                              "outlinedSecondary": "MuiButton-outlinedSecondary",
                              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                              "root": "MuiButton-root",
                              "sizeLarge": "MuiButton-sizeLarge",
                              "sizeSmall": "MuiButton-sizeSmall",
                              "startIcon": "MuiButton-startIcon",
                              "text": "MuiButton-text",
                              "textPrimary": "MuiButton-textPrimary",
                              "textSecondary": "MuiButton-textSecondary",
                              "textSizeLarge": "MuiButton-textSizeLarge",
                              "textSizeSmall": "MuiButton-textSizeSmall",
                            }
                          }
                          onClick={[Function]}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            className="MuiButton-root MuiButton-text createButton"
                            component="button"
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                            onClick={[Function]}
                            type="button"
                          >
                            <ForwardRef(ButtonBase)
                              className="MuiButton-root MuiButton-text createButton"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="Mui-focusVisible"
                              onClick={[Function]}
                              type="button"
                            >
                              <button
                                className="MuiButtonBase-root MuiButton-root MuiButton-text createButton"
                                disabled={false}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={0}
                                type="button"
                              >
                                <span
                                  className="MuiButton-label"
                                >
                                  CREATE LOBBY
                                </span>
                                <NoSsr>
                                  <WithStyles(memo)
                                    center={false}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={false}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(memo)>
                                </NoSsr>
                              </button>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(Button)>
                      </WithStyles(ForwardRef(Button))>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabIndex={0}
                  />
                </TrapFocus>
              </div>
            </Portal>
          </ForwardRef(Portal)>
        </ForwardRef(Modal)>
      </div>
    </AddLobbyModal>
  </Connect(AddLobbyModal)>
</Provider>
`;

exports[`<LobbyPage /> renders lobby page 1`] = `
<div
  className="lobbyParent"
>
  <div
    className="headerContainer"
  >
    <div
      className="barContainer"
    >
      <div
        className="bar"
      >
        <button
          className="MuiButtonBase-root MuiIconButton-root logoButton"
          disabled={false}
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={0}
          type="button"
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              height="100%"
              viewBox="0 0 450 450"
              width="100%"
            >
              <path
                d="M340.681 135.739c-13.152-26.976-35.744-42.112-57.568-56.736-16.288-10.912-31.68-21.216-42.56-35.936l-1.952-2.624c-6.432-8.64-13.696-18.432-14.848-26.656-1.152-8.32-8.704-14.24-16.96-13.76a15.957 15.957 0 00-14.88 15.936v285.12c-13.408-8.128-29.92-13.12-48-13.12-44.096 0-80 28.704-80 64s35.904 64 80 64 80-28.704 80-64V72.955c12.544 13.312 27.136 23.104 41.376 32.64 19.168 12.832 37.28 24.96 46.656 44.192 5.888 12 8.704 25.088 8 36.736-1.76 28.512-12.512 57.184-28.032 74.88-5.856 6.624-5.216 16.736 1.44 22.56 6.592 5.888 16.704 5.184 22.56-1.44 20.032-22.752 33.824-58.784 35.968-94.016 1.055-17.376-2.816-35.616-11.2-52.768z"
              />
            </svg>
          </span>
        </button>
        <p
          className="barTitle"
        >
          LOBBIES
        </p>
        <div
          className="user"
        >
          <p
            className="userName"
          />
        </div>
      </div>
    </div>
  </div>
  <div />
  <div
    className="searchContainer"
  >
    <button
      className="MuiButtonBase-root MuiButton-root MuiButton-text addButton"
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      onDragLeave={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      tabIndex={0}
      type="button"
    >
      <span
        className="MuiButton-label"
      >
        Add Lobby
      </span>
    </button>
    <div
      className="MuiFormControl-root MuiTextField-root makeStyles-root-43 searchField"
      height={20}
    >
      <label
        className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
        data-shrink={false}
      >
        Search
      </label>
      <div
        className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
        onClick={[Function]}
      >
        <input
          aria-invalid={false}
          autoFocus={false}
          className="MuiInputBase-input MuiOutlinedInput-input SearchField-input2-42"
          disabled={false}
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          required={false}
          type="text"
        />
        <fieldset
          aria-hidden={true}
          className="PrivateNotchedOutline-root-102 MuiOutlinedInput-notchedOutline"
        >
          <legend
            className="PrivateNotchedOutline-legendLabelled-104"
          >
            <span>
              Search
            </span>
          </legend>
        </fieldset>
      </div>
    </div>
  </div>
  <div
    className="lobbyContainer"
  >
    <p>
      No Lobbies :(
    </p>
  </div>
</div>
`;

exports[`<LobbyPage /> renders lobby tile 1`] = `
<div
  className="lobbyContainer"
>
  <div />
  <div />
  <svg
    aria-hidden="true"
    className="MuiSvgIcon-root deleteIcon"
    focusable="false"
    onClick={[Function]}
    role="presentation"
    viewBox="0 0 24 24"
  >
    <path
      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
    />
  </svg>
  <div
    className="lobbyTile"
    onClick={[Function]}
  >
    <div
      className="background"
    >
      <svg
        aria-hidden="true"
        className="MuiSvgIcon-root lockedIcon"
        focusable="false"
        preserveAspectRatio="none"
        role="presentation"
        viewBox="0 0 24 24"
      >
        <path
          d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z"
        />
      </svg>
    </div>
    <div
      className="bottomSection"
    >
      <p
        className="lobbyName"
      />
    </div>
  </div>
</div>
`;
